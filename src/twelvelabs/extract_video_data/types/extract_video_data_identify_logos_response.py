# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .extract_video_data_identify_logos_response_data_item import (
    ExtractVideoDataIdentifyLogosResponseDataItem,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ExtractVideoDataIdentifyLogosResponse(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the video.
    """

    data: typing.Optional[
        typing.List[ExtractVideoDataIdentifyLogosResponseDataItem]
    ] = pydantic.Field(default=None)
    """
    An array that contains information about all the time ranges for which a brand logo has been identified.
    For each time range for which the platform identifies the presence of brand logos within the specified video, it returns an object that contains the fields below.
    If the platform doesn't find any logos, the `data` field is set to `None`.
    """

    index_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the index to which the video has been updated.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
