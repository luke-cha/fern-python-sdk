# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .extract_video_data_retrieve_ocr_response_data_item import (
    ExtractVideoDataRetrieveOcrResponseDataItem,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ExtractVideoDataRetrieveOcrResponse(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the video.
    """

    data: typing.Optional[typing.List[ExtractVideoDataRetrieveOcrResponseDataItem]] = (
        pydantic.Field(default=None)
    )
    """
    An array that contains the OCR elements. For each time range for which the platform finds OCR elements, it returns an object that contains the fields below.
    If the platform doesn't find any OCR elements, the `data` field is set to `None`.
    """

    index_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the index to which the video has been updated.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
