# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class Summary(UniversalBaseModel):
    """
    When the value of the `type` parameter is set to `summary`, the response is as follows:
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier of the response.
    """

    summary: typing.Optional[str] = pydantic.Field(default=None)
    """
    A brief report of the main points of the video.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
