# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ManageVideosRetrieveVideoInformationResponseHls(UniversalBaseModel):
    """
    The platform returns this object only for the videos that you uploaded with the `disable_video_stream` parameter set to `false`.
    """

    video_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    A string representing the URL of the video. You can then use this URL to access the stream over the <a href="https://en.wikipedia.org/wiki/HTTP_Live_Streaming" target="_blank">HLS</a> protocol.
    """

    thumbnail_urls: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    An array containing the URL of the thumbnail.
    """

    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    A string representing the encoding status of the video file from its original format to a streamable format.
    """

    updated_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    A string indicating the date and time, in the <a href="https://datatracker.ietf.org/doc/html/rfc3339" target="_blank">RFC 3339</a> format ("YYYY-MM-DDTHH:mm:ssZ"), that the encoding status was last updated.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
