# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .confidence import Confidence
from .end_time import EndTime
import pydantic
from .start_time import StartTime
from .thumbnail_url import ThumbnailUrl
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClassifyClip(UniversalBaseModel):
    """
    An array containing information about the video clips that match the label you've specified.
    """

    confidence: typing.Optional[Confidence] = None
    end: typing.Optional[EndTime] = None
    score: typing.Optional[float] = pydantic.Field(default=None)
    """
    A number indicating the confidence level that the video clips match the specified class.
    """

    option: typing.Optional[str] = pydantic.Field(default=None)
    """
    Indicates the type of search the platform performed.
    """

    prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    Indicates the prompt that the platform used.
    """

    start: typing.Optional[StartTime] = None
    thumbnail_url: typing.Optional[ThumbnailUrl] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
