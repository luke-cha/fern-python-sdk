# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .classify_clip import ClassifyClip
import pydantic
from .max_confidence import MaxConfidence
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClassifyLabelResult(UniversalBaseModel):
    """
    An array containing information about the video clips that match the the prompts you've specified.
    """

    classes: typing.Optional[typing.List[ClassifyClip]] = pydantic.Field(default=None)
    """
    An array of objects containing information about each of the matching video clips. This field is included in the response only when you set the value of the `include_clips` parameter to `true`.
    """

    confidence: typing.Optional[MaxConfidence] = None
    duration: typing.Optional[float] = pydantic.Field(default=None)
    """
    The total duration of the matching video clips.
    """

    max_score: typing.Optional[float] = pydantic.Field(default=None)
    """
    When classifying a video, the platform finds all video clips that match the label you've specified in the request. For each video clip found, the platform determines the level of confidence that the clip matches the label. The `max_score` field is determined by comparing the confidence scores of each clip and selecting the highest one.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the label.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
