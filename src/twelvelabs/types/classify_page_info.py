# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .limit_per_page_simple import LimitPerPageSimple
from .next_page_token import NextPageToken
from .total_results import TotalResults
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClassifyPageInfo(UniversalBaseModel):
    page_expired_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    A string representing the date and time, in the <a href="https://datatracker.ietf.org/doc/html/rfc3339" target="_blank">RFC 3339</a> format ("YYYY-MM-DDTHH:mm:ssZ"), that the page expires.
    """

    limit_per_page: typing.Optional[LimitPerPageSimple] = None
    next_page_token: typing.Optional[NextPageToken] = None
    prev_page_token: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the previous page. If this is the first page, the API returns an empty string.
    """

    total_results: typing.Optional[TotalResults] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
