# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class EmbeddingResult(UniversalBaseModel):
    error_message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if embedding generation failed.
    """

    float_: typing_extensions.Annotated[
        typing.Optional[typing.List[float]], FieldMetadata(alias="float")
    ] = pydantic.Field(default=None)
    """
    An array of floating point numbers representing the embedding.
    """

    is_success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    This field indicates whether the embedding generation was successful.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
