# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class VideoIndexingTaskRetrieveResponseProcess(UniversalBaseModel):
    """
    If your video has not yet finished indexing, the platform returns the current progress of the indexing operation.
    """

    percentage: typing.Optional[float] = pydantic.Field(default=None)
    """
    A value between 0 and 100 that indicates the percentage complete.
    """

    remain_seconds: typing.Optional[float] = pydantic.Field(default=None)
    """
    Estimated time left, expressed in seconds, until the video finishes indexing.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
